#include<stdlib.h>
#include<stdio.h>
int visited[10]={0,0,0,0,0,0,0,0,0,0};
int adj[10][10],stack[10],v,s,p,top=-1,i,j;
int main()
{
 void dfs(int s,int v);
 printf("enter the number of vertices");
 scanf("%d",&v);
 printf("\n enter the adjancency matrix:");
 for(i=1;i<=v;i++)
 {
 for(j=1;j<=v;j++)
 {
 scanf("%d",&adj[i][j]);
 }
 }
 printf("\nEnter the starting vertex");
 scanf("%d",&s); 
 dfs(s,v);
 }
void push(int item)
 {
 if (top==11)
 printf("stack full");
 else
 {
 top++;                                                                                                                             
 stack[top]=item;
 }
 }
int pop()
{
if (top==-1)
 return(0);
else
 p=stack[top];
 top--;
 return(p);
}
void dfs(int s,int v)
{
push(s);
visited[s]=1;
p=pop();
if(p!=0)
 printf("%d",p);
while(p!=0)
{
for(i=1;i<=v;i++)
 {
 if(adj[p][i]==1&&visited[i]==0)
 {
 push(i);
 visited[i]=1;
}
}
p=pop();
if(p!=0)                                                                                                                                   104
 printf("\t%d",p);
}
} 

